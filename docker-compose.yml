version: "3"

services:

  # BACKEND SERVICES

  users-microservice:
    container_name: users-microservice
    restart: always
    build: './users-microservice'
    ports:
      - "8080:8080"
    depends_on:
      - mongo-users
      - redis

  availability-microservice:
    container_name: availability-microservice
    restart: always
    build: './availability-microservice'
    ports:
      - "9010:9010"
    depends_on:
      - mongo-availability
      - redis

  interests-microservice:
    container_name: interests-microservice
    restart: always
    build: './interests-microservice'
    ports:
      - "9020:9020"
    depends_on:
      - postgresql-interests
      - redis
  
  reservations-microservice:
    container_name: reservations-microservice
    restart: always
    build: './reservations-microservice'
    ports:
      - "9030:9030"
    depends_on:
      - mongo-reservations
      - redis
      - users-microservice
      - availability-microservice

  # FRONTEND SERVICES

  click-meet1:
    container_name: click-meet1
    restart: always
    build: './click-meet'
    depends_on:
      - users-microservice
      - availability-microservice
      - interests-microservice
      - reservations-microservice

  click-meet2:
    container_name: click-meet2
    restart: always
    build: './click-meet'
    depends_on:
      - users-microservice
      - availability-microservice
      - interests-microservice
      - reservations-microservice

  click-meet3:
    container_name: click-meet3
    restart: always
    build: './click-meet'
    depends_on:
      - users-microservice
      - availability-microservice
      - interests-microservice
      - reservations-microservice

  nginx:
    container_name: nginx
    build: nginx/
    ports: 
      - "8090:8090"
    depends_on:
      - click-meet1
      - click-meet2
      - click-meet3

  # DATABASE SERVICES

  postgresql-interests:
    restart: always
    container_name: postgresql-interests
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=interests_db
    build: postgres

  mongo-reservations:
    container_name: mongo-reservations
    image: mongo

  mongo-availability:
    container_name: mongo-availability
    image: mongo

  mongo-users:
    container_name: mongo-users
    image: mongo
          
  redis:
    container_name: redis
    image: redis